import{_ as n,p as s,q as a,a1 as t}from"./framework-5866ffd3.js";const p={},e=t(`<h1 id="grouping" tabindex="-1"><a class="header-anchor" href="#grouping" aria-hidden="true">#</a> Grouping</h1><p>Barchart automatically groups data by date, depending on zoom, but you can specify a <code>groupIdFunction</code> to make it group together nodes with different data. Let&#39;s say you have two types of nodes: persons and cars, like this:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> nodes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;car&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">1677508918326</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;person&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">1677508918326</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can then pass a <code>groupIdFunction</code> that will create bars for cars and bars for persons.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> timelinePlugin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimelinePlugin</span><span class="token punctuation">(</span>ogma<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  barchart<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">groupIdFunction</span><span class="token operator">:</span> <span class="token punctuation">(</span>nodeId<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ogma<span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>nodeId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  timeline<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">groupIdFunction</span><span class="token operator">:</span> <span class="token punctuation">(</span>nodeId<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ogma<span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>nodeId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Items within a group will have a class corresponding to the <code>groupId</code> return by <code>groupIdFunction</code>. You can use it to style your items. See <a href="/styling">styling</a></p>`,6),o=[e];function c(i,l){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","grouping.html.vue"]]);export{u as default};
